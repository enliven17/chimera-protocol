type Market @entity {
  id: ID!
  marketId: BigInt!
  title: String!
  creator: Bytes!
  marketType: Int!
  status: Int!
  resolved: Boolean!
  outcome: Int
  finalPrice: BigInt
  totalPool: BigInt!
  totalOptionAShares: BigInt!
  totalOptionBShares: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
  resolvedAt: BigInt
  
  # Relations
  positions: [UserPosition!]! @derivedFrom(field: "market")
}

type UserPosition @entity {
  id: ID!
  marketId: BigInt!
  market: Market!
  user: Bytes!
  optionAShares: BigInt!
  optionBShares: BigInt!
  totalInvested: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type AgentDelegation @entity {
  id: ID!
  user: Bytes!
  agent: Bytes!
  approved: Boolean!
  maxBetAmount: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type PriceUpdate @entity {
  id: ID!
  priceId: Bytes!
  price: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
}

# Events
type MarketCreatedEvent @entity {
  id: ID!
  marketId: BigInt!
  title: String!
  creator: Bytes!
  marketType: Int!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BetPlacedEvent @entity {
  id: ID!
  marketId: BigInt!
  user: Bytes!
  agent: Bytes!
  option: Int!
  amount: BigInt!
  shares: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketResolvedEvent @entity {
  id: ID!
  marketId: BigInt!
  outcome: Int!
  resolver: Bytes!
  finalPrice: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AgentDelegationUpdatedEvent @entity {
  id: ID!
  user: Bytes!
  agent: Bytes!
  approved: Boolean!
  maxBetAmount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PythPriceUpdatedEvent @entity {
  id: ID!
  priceId: Bytes!
  price: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}